/*
 * Implement YAK, as described in
 * http://grouper.ieee.org/groups/1363/Research/contributions/hao-ryan-2008.pdf
 * 
 * With hints from http://www.cl.cam.ac.uk/~fh240/software/YAK2.java.
 */

#ifndef HEADER_YAK_H
#define HEADER_YAK_H

#include <openssl/opensslconf.h>

#ifdef OPENSSL_NO_YAK
#error YAK is disabled.
#endif

#ifdef  __cplusplus
extern "C" {
#endif

#include <openssl/bn.h>
#include <openssl/sha.h>

typedef struct YAK_CTX YAK_CTX;

/* Note that "g" in the ZKPs is not necessarily the J-PAKE g. */
typedef struct
    {
    EC_POINT *gr; /* g^r (r random) */
    BIGNUM *b;  /* b = r - k*h, h=hash(g, g^r, g^k, name) */
    } YAK_ZKP;

typedef struct
    {
    EC_POINT *gk;       /* g^k in step 1 */
    YAK_ZKP zkpx;   /* ZKP(x) or ZKP(xb * s) */
    } YAK_STEP_PART;


typedef YAK_STEP_PART;

/* Parameters are copied */
YAK_CTX *YAK_CTX_new(const char *name, const char *peer_name,
			 const BIGNUM *p, const EC_POINT *g, const BIGNUM *q,
			 const BIGNUM *secret);
void YAK_CTX_free(YAK_CTX *ctx);

/*
 * the return value belongs to the library and will be released when
 * ctx is released, and will change when a new handshake is performed.
 */
const BIGNUM *YAK_get_shared_key(YAK_CTX *ctx);
    

/* BEGIN ERROR CODES */
/* The following lines are auto generated by the script mkerr.pl. Any changes
 * made after this point may be overwritten when the script is next run.
 */
void ERR_load_YAK_strings(void);

/* Error codes for the YAK functions. */

/* Function codes. */
#define YAK_F_YAK_STEP1_PROCESS			 101
#define YAK_F_YAK_STEP2_PROCESS			 102
#define YAK_F_YAK_STEP3A_PROCESS			 103
#define YAK_F_YAK_STEP3B_PROCESS			 104
#define YAK_F_VERIFY_ZKP				 100

/* Reason codes. */
#define YAK_R_G_TO_THE_X3_IS_NOT_LEGAL		 108
#define YAK_R_G_TO_THE_X4_IS_NOT_LEGAL		 109
#define YAK_R_G_TO_THE_X4_IS_ONE			 105
#define YAK_R_HASH_OF_HASH_OF_KEY_MISMATCH		 106
#define YAK_R_HASH_OF_KEY_MISMATCH			 107
#define YAK_R_VERIFY_B_FAILED				 102
#define YAK_R_VERIFY_X3_FAILED			 103
#define YAK_R_VERIFY_X4_FAILED			 104
#define YAK_R_ZKP_VERIFY_FAILED			 100

#ifdef  __cplusplus
}
#endif
#endif
